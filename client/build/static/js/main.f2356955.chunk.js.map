{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","Auth.js","MainPage.js","VisitorsList.js","Messanger.js","hooks/auth.hook.js","Components/Navigation.js","App.js","useRoutes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","username","userId","login","logout","isAuthenticated","Auth","props","auth","useContext","password","form","setForm","onChange","event","target","name","value","isCorrect","setShow","id","admin","alert","console","log","className","placeholder","type","onClick","MainPage","show","useLayoutEffect","catch","e","href","prompt","then","res","answer","writeMe","visible","customStyles","backgroundColor","padding","width","height","onClose","VisitorsList","messages","visits","setData","listMessages","map","el","index","text","listVisits","ip","country","clearList","list","successful","useEffect","Messanger","dialogs","setDialogs","field","setField","contactId","dialogSwitch","setDialogSwitch","listOfDialogs","dialogSwitchHandler","senderUsername","result","listOfMessages","element","sender","recipient","interimDS","push","unshift","time","Date","getDate","interimDialogs","forEach","sender_id","recipient_id","idOne","idTwo","sort","b","created_at","sorted","length","reverse","condidate","newMessageHandler","onChangeHandler","sendHandler","storageName","Navigation","isAdmin","to","App","setToken","setUsername","setUserId","setIsAdmin","jwtToken","usr","localStorage","setItem","removeItem","parse","getItem","authenticated","useAuth","routes","path","exact","useRoutes","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2356955.chunk.js","sourcesContent":["import { useCallback, useState } from 'react'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n        setLoading(true)\n        if(body){\n            body = JSON.stringify(body)\n            headers['Content-Type'] = 'application/json'\n            headers['Accept'] = 'application/json'\n\n        }\n        try {\n            const response = await fetch(url, { method, body, headers })\n            const data = await response.json()\n\n            if(!response.ok) throw new Error(data.message || 'Somthing wrong')\n\n            setLoading(false)\n            return data\n        }catch (e){\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    }, [])\n    const clearError = () => setError(null)\n\n    return {loading, request, error, clearError}\n}\n","import { createContext } from \"react\"\n\nfunction noop(){\n\n}\n\nexport const AuthContext = createContext({\n    token: null,\n    username: null,\n    userId: null,\n    login: noop,\n    logout: noop,\n    isAuthenticated: false\n})","import './styles/auth.css'\nimport { useState, useContext } from \"react\";\nimport { useHttp } from './hooks/http.hook'\nimport {AuthContext} from \"./context/AuthContext\";\n\nexport default function Auth (props){\n    const auth = useContext(AuthContext)\n    const [form, setForm] = useState({username: ' ', password: ''})\n    const { request } = useHttp()\n\n    function onChange(event) {\n        setForm({ ...form, [event.target.name]: event.target.value })\n    }\n\n    async function loginHandler(){\n        try{\n            const data = await request('/api/login', 'POST', {...form})\n            if(data.isCorrect) {\n                props.setShow()\n                auth.login(data.token, data.username, data.id, data.admin)\n                return\n            }\n            alert('Incorrect login')\n        }catch (e){\n            console.log(e)\n        }\n    }\n\n    async function registerHandler() {\n        try{\n            const data = await request('/api/register', 'POST', {...form})\n            if(data.isCorrect) {\n                props.setShow()\n                auth.login(data.token, data.username, data.id, data.admin)\n                return\n            }\n            alert(data.message)\n\n        }catch (e) {\n            console.log(e)\n        }\n    }\n\n    return(\n        <div className=\"auth__window\">\n            <p className=\"auth__header\">Login</p>\n            <div className=\"input__item\">\n                <i className=\"fas fa-user\"></i>\n                <input className=\"auth__login\" name=\"username\" placeholder=\"username\" type=\"text\" onChange={event => onChange(event)}/>\n            </div>\n            <div className=\"input__item\">\n                <i className=\"fas fa-key\"></i>\n                <input className=\"auth__password\" name=\"password\" placeholder=\"password\" type=\"password\" onChange={event => onChange(event)}/>\n            </div>\n            <button className=\"auth__btn\" onClick={loginHandler}>Sign in</button>\n            <button className=\"auth__btn\" onClick={registerHandler}>Register</button>\n        </div>\n    )\n}","import './styles/main.css'\nimport { useState, useLayoutEffect } from \"react\";\nimport Rodal from 'rodal'\nimport 'rodal/lib/rodal.css'\nimport { useHttp } from \"./hooks/http.hook\";\n\nimport Auth from './Auth'\n\nfunction MainPage(){\n    const { request } = useHttp()\n    const [show, setShow] = useState(false)\n\n    useLayoutEffect(() => {\n        request('/api/addvisitor')\n            .catch(e => console.log(e))\n    }, [request])\n\n    function writeMe(){\n        const message = prompt('Write me/Напиши мне...')\n        if(message === '') return\n        request('/api/write', 'POST', { message })\n            .then(res => alert(res.answer))\n            .catch(e => alert(e))\n    }\n\n    return(\n        <div className=\"mainPage\">\n            <div className=\"mainPageInner\">\n                <div className=\"header\">\n                    <h2 className=\"sub__header\">Nothing interesting here</h2>\n                    <h1 className=\"main__header\">fjodorov.ru</h1>\n                    <div className=\"social\">\n                        <div className=\"social__icons\">\n                            <a href=\"https://www.instagram.com/fjodorov.ru/\">\n                                <div className=\"icon__item\"><i className=\"fab fa-instagram social__icon\"></i></div>\n                            </a>\n                            <a href=\"https://t.me/fjodorov\">\n                                <div className=\"icon__item\"><i className=\"fab fa-telegram-plane social__icon\"></i></div>\n                            </a>\n                            <a href=\"mailto:fjodorov.develop@mail.ru\">\n                                <div className=\"icon__item\"><i className=\"fas fa-envelope social__icon\"></i></div>\n                            </a>\n                            <div className=\"icon__item\" id=\"write\" onClick={() => writeMe()}><i className=\"fas fa-pencil-alt social__icon\"></i></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <i className=\"fas fa-cogs admin__login\" onClick={() => setShow(true)}></i>\n            <Rodal visible={show}\n                   customStyles={{\n                       backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                       padding: '40px 20px',\n                       width: '350px',\n                       height: '350px'\n                   }}\n                   onClose={() => setShow(false)}>\n                <Auth setShow={() => setShow(false)} />\n            </Rodal>\n            </div>\n\n            )\n}\n\nexport default MainPage","import './styles/visitors.css'\nimport { useHttp } from './hooks/http.hook'\nimport { useState, useContext, useEffect } from \"react\"\nimport { AuthContext } from \"./context/AuthContext\";\n\n\nexport default function VisitorsList(){\n    const { token, logout } = useContext(AuthContext)\n    const { request } = useHttp()\n    const [ data, setData ] = useState({ messages: [], visits: [] })\n\n    const listMessages = data.messages.map((el, index) =>\n        <li className=\"collection-item list__item\" key={index}><span className=\"li__number\">{`${index}. `}</span>{`${el.text}`}</li>)\n    const listVisits = data.visits.map((el, index) =>\n        <li className=\"collection-item list__item\" key={index}><span className=\"li__number\">{`${el.id}. `}</span>{`${el.ip}, ${el.country}`}</li>)\n\n    useEffect(() => {\n        request('/api/getvisitors', 'POST', { token })\n            .then(res => res.successful ? setData({messages: res.messages, visits: res.visits}) : logout())\n    }, [request, token, logout])\n\n    function clearList(list){\n        request('/api/clearlist', 'POST', { token, list })\n            .then(res => {\n                if(res.successful){\n                    setData({ ...data, [list]: [] })\n                }else{\n                    logout()\n                }\n            })\n            .catch(e => alert('Error!' + e))\n    }\n\n\n    return(\n        <div className=\"visitors__page\">\n            <ul className=\"collection with-header visitors__list\">\n                <li className=\"collection-header\">\n                    <h4 className=\"list__header\">Messages list</h4>\n                    <button className=\"waves-effect waves-light btn\" onClick={() => clearList('messages')}>CLEAR</button>\n                </li>\n                { listMessages }\n            </ul>\n\n            <ul className=\"collection with-header messages__list\">\n                <li className=\"collection-header\">\n                    <h4 className=\"list__header\">Visitors list</h4>\n                    <button className=\"waves-effect waves-light btn\" onClick={() => clearList('visits')}>CLEAR</button>\n\n                </li>\n                { listVisits }\n            </ul>\n        </div>\n    )\n}","import './styles/messanger.css'\nimport React from 'react'\nimport { useState, useEffect, useContext } from \"react\"\nimport { useHttp } from \"./hooks/http.hook\"\nimport { AuthContext } from \"./context/AuthContext\";\n\n\nfunction Messanger(){\n    const { request } = useHttp()\n    const { token, userId, username } = useContext(AuthContext)\n    const [dialogs, setDialogs] = useState([])\n    const [field, setField] = useState('')\n    const [dialogSwitch, setDialogSwitch] = useState({ contactId: null, messages: [] })\n\n    const listOfDialogs = dialogs.map((el, index) => {\n        return(\n            <div className=\"contacts__item\" key={index} onClick={() =>\n                dialogSwitchHandler(el)\n            }>\n                <div className=\"contacts__avatar\">\n                    <i className=\"fas fa-user avatar\"></i>\n                </div>\n                <div className=\"contacts__content\">\n                    <h5 className=\"contancts__name\">{el.senderUsername}</h5>\n                    <p className=\"contacts__lastmsg\">{el.message}</p>\n                </div>\n            </div>\n        )\n    })\n\n    useEffect(() => {\n        request('/api/getcontacts', 'POST', { token })\n            .then(result => {\n                setDialogs(result.dialogs)\n            })\n\n    }, [request, token])\n\n    const listOfMessages = dialogSwitch.messages.map((el, index) => {\n        const list = el.messages.map((element, index) => {\n            return(<p key={index} className=\"dialog__msg\">{element}</p>)\n        })\n        return(\n            <div key={index} className=\"dialog__item\">\n                <div className=\"dialog__avatar\">\n                    <i className=\"fas fa-user avatar\"></i>\n                </div>\n                <div className=\"dialog__content\">\n                    <h5 className=\"dialog__name\">{el.sender}</h5>\n                    {list}\n                </div>\n            </div>\n        )\n    })\n\n    async function sendHandler(){\n        if(field === '') return\n         await request('/api/sendmessage', 'POST', { sender: userId, recipient: dialogSwitch.contactId, message: field, token })\n        let interimDS = dialogSwitch\n        if(dialogSwitch.messages[0].sender === userId){\n            interimDS.messages[0].messages.push(field)\n        }else{\n            interimDS.messages.unshift({ messages: [field], sender: userId, recipient: dialogSwitch.contactId, time: new Date().getDate() })\n        }\n        let interimDialogs = dialogs\n        interimDialogs.forEach(el => {\n            if(el.sender_id === dialogSwitch.contactId || el.recipient_id === dialogSwitch.contactId){\n                el.message = field\n                el.sender_id = userId\n                el.recipient_id = dialogSwitch.contactId\n            }\n        })\n        setDialogs(interimDialogs)\n        setDialogSwitch(interimDS)\n        setField('')\n    }\n\n    async function dialogSwitchHandler(el){\n        const contactId = el.sender_id !== userId ? el.sender_id : el.recipient_id\n        let { messages } = await request('/api/loadmessages', 'POST', { idOne: el.sender_id, idTwo: el.recipient_id, token })\n        messages.sort((a, b) => {\n            return new Date(b.created_at) - new Date(a.created_at)\n        })\n        let sorted = []\n        messages.forEach((element) => {\n            if(sorted.length > 0 && element.sender_id === sorted[sorted.length - 1].sender){\n                    sorted[sorted.length - 1].messages.push(element.message)\n            }else{\n                sorted.push({\n                    sender: element.sender_id,\n                    recipient: element.recipient_id,\n                    time: element.created_at,\n                    messages: [element.message]\n                })\n            }\n\n        })\n        sorted.forEach(el => {\n            el.messages.reverse()\n        })\n        setDialogSwitch({ messages: sorted, contactId })\n    }\n\n    async function newMessageHandler(){\n        const condidate = prompt('Введи имя пользователя которому хотите написать')\n        if(condidate === username) return\n        const result = await request('/api/getid', 'POST', { token, username: condidate })\n        console.log(result)\n        if(!result.id) alert('Нет такого пользователя')\n        dialogSwitchHandler({ sender_id: userId, recipient_id: result.id })\n\n    }\n\n    function onChangeHandler(e){\n        setField(e.target.value)\n    }\n\n    return(\n        <div className=\"messanger__container\">\n        <div className=\"messanger__inner\">\n            <i onClick={ () => newMessageHandler() } className=\"fas fa-arrow-circle-right send_arrow\"></i>\n            <div className=\"contacts\">\n                { listOfDialogs || null }\n            </div>\n            <div className=\"dialog\">\n                <div className=\"dialog__head\"></div>\n                <div className=\"dialog__body\">\n                    { listOfMessages || null }\n                </div>\n                <div className=\"dialog__footer\">\n                   <textarea value={field} onChange={e => onChangeHandler(e)}></textarea>\n                    <i onClick={ () => sendHandler() } className=\"fas fa-arrow-circle-right send_arrow\"></i>\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Messanger","import { useState, useCallback, useEffect } from \"react\"\nimport { useHttp } from \"./http.hook\"\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n    const [token ,setToken] = useState(null)\n    const [username, setUsername] = useState(null)\n    const [userId, setUserId] = useState(null)\n    const [isAdmin, setIsAdmin] = useState(0)\n    const { request } = useHttp()\n\n    const login = useCallback((jwtToken, usr, id, admin = 0) => {\n        setToken(jwtToken)\n        setUsername(usr)\n        setUserId(id)\n        setIsAdmin(admin)\n\n        localStorage.setItem(storageName, JSON.stringify({ username: usr, userId: id, token: jwtToken, admin: admin }))\n    }, [])\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUsername(null)\n        setUserId(null)\n        setIsAdmin(0)\n\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(()=> {\n        const data = JSON.parse(localStorage.getItem(storageName))\n\n         if(data && data.token){\n             request('/api/checkauth', 'POST', { token: data.token })\n                 .then(res => {\n                     if(res.authenticated) {\n                         login(data.token, data.username, data.userId, data.admin)\n                     }else{\n                         logout()\n                     }\n                 })\n         }\n    },[login, logout, request])\n\n    return { login, logout, token, username, userId, isAdmin }\n}","import '../styles/materialize.min.css'\nimport { NavLink } from 'react-router-dom'\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\n\n\n\nexport default function Navigation(){\n    const { logout, isAdmin } = useContext(AuthContext)\n    return(\n        <nav className=\"navigation\">\n            <div className=\"nav-wrapper\">\n                <a href=\"/\" className=\"brand-logo\">Admin menu</a>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li><NavLink to=\"/\">Main</NavLink></li>\n                    { isAdmin ? <li><NavLink to=\"/visitorslist\">Visitors list</NavLink></li> : null }\n                    <li><NavLink to=\"/messanger\">Messanger</NavLink></li>\n                    <li onClick={() => logout()}><a href=\"/\">EXIT</a></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import { BrowserRouter } from 'react-router-dom'\nimport { useRoutes } from \"./useRoutes\"\nimport { useAuth } from \"./hooks/auth.hook\"\nimport { AuthContext } from \"./context/AuthContext\"\nimport Navigation from \"./Components/Navigation\";\nimport React from \"react\";\n\nfunction App() {\n    const { token, username, userId, login, logout, isAdmin } = useAuth()\n    const isAuthenticated = !!token\n    const routes = useRoutes(isAuthenticated)\n\n  return (\n      <AuthContext.Provider value={{\n          token, username, userId, login, logout, isAuthenticated, isAdmin\n      }}>\n          <BrowserRouter>\n\n              {isAuthenticated ? <Navigation /> : ''}\n              <div className=\"myContainer\">\n                  {routes}\n              </div>\n          </BrowserRouter>\n      </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\"\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport MainPage from \"./MainPage\"\nimport VisitorsList from \"./VisitorsList\";\nimport Messanger from './Messanger'\n\nexport const useRoutes = isAuthenticated => {\n\n    if(isAuthenticated){\n        return(\n            <Switch>\n                <Route path=\"/\" exact>\n                    <MainPage />\n                </Route>\n                <Route path=\"/visitorslist\" exact>\n                    <VisitorsList />\n                </Route>\n                <Route path=\"/messanger\" exact>\n                    <Messanger />\n                </Route>\n            </Switch>\n        )\n    }else{\n        return(\n            <Switch>\n                <Route path=\"/\" exact>\n                    <MainPage />\n                </Route>\n                <Redirect to=\"/\"/>\n            </Switch>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}